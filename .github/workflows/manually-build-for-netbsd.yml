name: manually build uctags for netbsd

on:
  workflow_dispatch:
    inputs:
      target-arch:
        description: choose a target arch to be built for
        type: choice
        options:
          - amd64

      enable-manpages:
        description: whether to generate manpages
        type: boolean
        default: false

      enable-json:
        description: whether to enable json support
        type: boolean
        default: true

      enable-yaml:
        description: whether to enable yaml support
        type: boolean
        default: true

      enable-xml:
        description: whether to enable xml support
        type: boolean
        default: true

      enable-libiconv:
        description: whether to enable libiconv support
        type: boolean
        default: true

      enable-threads:
        description: whether to enable threads support
        type: boolean
        default: true

      enable-largefile:
        description: whether to enable large file support
        type: boolean
        default: true

      regex-backend:
        description: choose a regex backend to be built with
        type: choice
        options:
          - none
          - gnu-regex
          - pcre2
        default: gnu-regex

jobs:
  build:

    runs-on: macos-12

    steps:
      - name: create formula
        run: |
          unset DEP_PKG
          unset CONFIGURE_ARGS

          if [ '${{ github.event.inputs.enable-threads }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-threads"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-threads"
          fi

          if [ '${{ github.event.inputs.enable-largefile }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-largefile"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-largefile"
          fi

          if [ '${{ github.event.inputs.enable-json }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-json"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-json"
              DEP_PKG="$DEP_PKG jansson"
          fi

          if [ '${{ github.event.inputs.enable-yaml }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-yaml"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-yaml"
              DEP_PKG="$DEP_PKG libyaml"
          fi

          if [ '${{ github.event.inputs.enable-xml }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-xml"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-xml"
              DEP_PKG="$DEP_PKG libxml2"
          fi

          if [ '${{ github.event.inputs.enable-libiconv }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-iconv"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-iconv"
              DEP_PKG="$DEP_PKG libiconv"
          fi

          case ${{ github.event.inputs.regex-backend }} in
              none)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-pcre2 --without-included-regex"
                ;;
              gnu-regex)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-pcre2 --with-included-regex"
                ;;
              pcre2)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-pcre2"
                DEP_PKG="$DEP_PKG pcre2"
                ;;
              *) echo "unexpected regex-backend: ${{ github.event.inputs.regex-backend }}"
          esac

          tee uctags.yml <<EOF
          summary: Maintained ctags implementation
          git-url: https://github.com/universal-ctags/ctags
          license: GPL-2.0-or-later
          dep-pkg: $DEP_PKG
          bsystem: autogen
          install: configure $CONFIGURE_ARGS
          EOF

      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 4096
          box: generic/netbsd9
          run: |
            export HOME=/home/vagrant

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            unset ETCCERTSDIR

            ETCCERTSDIR=$(sed -n '/^ETCCERTSDIR=/p' /usr/pkg/etc/ca-certificates-dir.conf | sed 's|ETCCERTSDIR=\(.*\)|\1|')

            if [ -n "$ETCCERTSDIR" ] ; then
                export SSL_CERT_FILE="$ETCCERTSDIR/ca-certificates.crt"
            fi

            run sudo pkgin -y update
            run sudo pkgin -y install llvm

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
            run chmod a+x ppkg
            run ./ppkg setup
            run ./ppkg update

            run mv uctags.yml ~/.ppkg/repos.d/offical-core/formula/uctags.yml

            run ./ppkg install uctags --link-type=static-full --install-lib=static
            run ./ppkg pack    uctags

      - run: scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:/home/vagrant/.ppkg/packed/uctags-*-netbsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v3
        with:
          name: uctags---netbsd-amd64.tar.xz
          path: uctags-*-netbsd-amd64.tar.xz
