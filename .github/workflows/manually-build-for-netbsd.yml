name: manually build uctags for netbsd

on:
  workflow_dispatch:
    inputs:
      target-arch:
        description: choose a target arch to be built for
        type: choice
        options:
          - amd64
          - arm64

      target-vers:
        description: choose which netbsd version to be built with
        type: choice
        options:
          - 9.3
          - 9.2
          - 9.1
          - 9.0
          - 8.2
          - 8.1
          - 8.0

      enable-manpages:
        description: whether to generate manpages
        type: boolean
        default: false

      enable-json:
        description: whether to enable json support
        type: boolean
        default: true

      enable-yaml:
        description: whether to enable yaml support
        type: boolean
        default: true

      enable-xml:
        description: whether to enable xml support
        type: boolean
        default: true

      enable-libiconv:
        description: whether to enable libiconv support
        type: boolean
        default: true

      enable-threads:
        description: whether to enable threads support
        type: boolean
        default: true

      enable-largefile:
        description: whether to enable large file support
        type: boolean
        default: true

      regex-backend:
        description: choose a regex backend to be built with
        type: choice
        options:
          - none
          - gnu-regex
          - pcre2
        default: gnu-regex

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: create formula
        run: |
          unset DEP_PKG
          unset CONFIGURE_ARGS

          if [ '${{ github.event.inputs.enable-threads }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-threads"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-threads"
          fi

          if [ '${{ github.event.inputs.enable-largefile }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-largefile"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-largefile"
          fi

          if [ '${{ github.event.inputs.enable-json }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-json"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-json"
              DEP_PKG="$DEP_PKG jansson"
          fi

          if [ '${{ github.event.inputs.enable-yaml }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-yaml"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-yaml"
              DEP_PKG="$DEP_PKG libyaml"
          fi

          if [ '${{ github.event.inputs.enable-xml }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-xml"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-xml"
              DEP_PKG="$DEP_PKG libxml2"
          fi

          if [ '${{ github.event.inputs.enable-libiconv }}' = 'false' ] ; then
              CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-iconv"
          else
              CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-iconv"
              DEP_PKG="$DEP_PKG libiconv"
          fi

          case ${{ github.event.inputs.regex-backend }} in
              none)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-pcre2 --without-included-regex"
                ;;
              gnu-regex)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --disable-pcre2 --with-included-regex"
                ;;
              pcre2)
                CONFIGURE_ARGS="$CONFIGURE_ARGS --enable-pcre2"
                DEP_PKG="$DEP_PKG libpcre2"
                ;;
              *) echo "unexpected regex-backend: ${{ github.event.inputs.regex-backend }}"
          esac

          tee uctags.yml <<EOF
          summary: Maintained ctags implementation
          git-url: https://github.com/universal-ctags/ctags
          license: GPL-2.0-or-later
          dep-pkg: $DEP_PKG
          bsystem: autogen
          install: configure $CONFIGURE_ARGS
          EOF

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup
      - run: ./ppkg update

      - run: mv uctags.yml ~/.ppkg/repos.d/offical-core/formula/uctags.yml

      - run: ./ppkg install netbsd-${{ github.event.inputs.target-vers }}-${{ github.event.inputs.target-arch }}/uctags --link-type=static-full
      - run: ./ppkg pack    netbsd-${{ github.event.inputs.target-vers }}-${{ github.event.inputs.target-arch }}/uctags

      - uses: actions/upload-artifact@v3
        with:
          name: uctags---netbsd-${{ github.event.inputs.target-vers }}-${{ github.event.inputs.target-arch }}.tar.xz
          path: uctags-*-netbsd-${{ github.event.inputs.target-vers }}-${{ github.event.inputs.target-arch }}.tar.xz
